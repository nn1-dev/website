---
import * as Sentry from "@sentry/astro";
import { getCollection, getEntries, getEntry } from "astro:content";
import Layout from "../../../layouts/Layout.astro";
import Hero from "../../../sections/Hero.astro";
import Organisers from "../../../sections/Organisers.astro";
import Container from "../../../components/Container.astro";
import Countdown from "../../../sections/Countdown.astro";
import Gallery from "../../../components/Gallery.astro";
import Profile from "../../../components/Profile.astro";
import Section from "../../../components/Section.astro";
import Heading from "../../../components/Heading.astro";
import Input from "../../../components/Input.astro";
import Checkbox from "../../../components/Checkbox.astro";
import Button from "../../../components/Button.astro";
import ButtonLink from "../../../components/ButtonLink.astro";
import { getInviteUrls } from "../../../utils";

const { eventId } = Astro.params;
if (eventId === undefined) {
  Sentry.captureMessage("Access non-existing event.");
  return Astro.redirect("/404");
}

const entry = await getEntry("events", eventId);

if (entry === undefined) {
  Sentry.captureMessage("Access non-existing event.");
  return Astro.redirect("/404");
}
export async function getStaticPaths() {
  const allEvents = await getCollection("events");

  return allEvents
    .filter(
      (event) => import.meta.env.MODE === "development" || !event.data.draft,
    )
    .map(({ data }) => ({
      params: { eventId: data.id.toString() },
    }));
}

const {
  data: {
    id,
    ogImage,
    name,
    description,
    dateStart,
    dateEnd,
    location,
    locationUrl,
    parking,
    parkingUrl,
    schedule,
    speakers,
    images,
  },
} = entry;

const relatedSpeakers = await getEntries(speakers);

const dateStartParsed = new Intl.DateTimeFormat("en-GB", {
  timeZone: "Europe/London",
  weekday: "long",
  year: "numeric",
  month: "numeric",
  day: "numeric",
  hour: "numeric",
  minute: "numeric",
  hour12: false,
}).format(dateStart);

const scheduleTimeFormat = (date: Date) =>
  new Intl.DateTimeFormat("en-GB", {
    timeZone: "Europe/London",
    hour: "2-digit",
    minute: "2-digit",
    hour12: false,
  }).format(date);

const isUpcoming = new Date().getTime() < dateStart.getTime();

const inviteUrls = getInviteUrls({
  id,
  name,
  description,
  location,
  dateStart,
  dateEnd,
});
---

<Layout
  title={`${name} | NN1 Dev Club`}
  description={description}
  og={ogImage.src}
>
  <Hero title={name} description={description}>
    {
      isUpcoming && (
        <ButtonLink text="Get your ticket now" href="#get-your-ticket" />
      )
    }
  </Hero>
  <Section style="contrast">
    <Container>
      <div class="event">
        <section class="event__section">
          <Heading title="Details" level={2} anchor />
          <ul class="events__item-list">
            <li class="events__item-list-item">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 16 16"
                fill="currentColor"
                class="events__item-icon"
              >
                <path
                  fill-rule="evenodd"
                  d="M4 1.75a.75.75 0 0 1 1.5 0V3h5V1.75a.75.75 0 0 1 1.5 0V3a2 2 0 0 1 2 2v7a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2V1.75ZM4.5 6a1 1 0 0 0-1 1v4.5a1 1 0 0 0 1 1h7a1 1 0 0 0 1-1V7a1 1 0 0 0-1-1h-7Z"
                  clip-rule="evenodd"></path>
              </svg>
              <time datetime={dateStart.toISOString()}>
                {dateStartParsed}
              </time>
            </li>
            <li class="events__item-list-item">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 16 16"
                fill="currentColor"
                class="events__item-icon"
              >
                <path
                  fill-rule="evenodd"
                  d="m7.539 14.841.003.003.002.002a.755.755 0 0 0 .912 0l.002-.002.003-.003.012-.009a5.57 5.57 0 0 0 .19-.153 15.588 15.588 0 0 0 2.046-2.082c1.101-1.362 2.291-3.342 2.291-5.597A5 5 0 0 0 3 7c0 2.255 1.19 4.235 2.292 5.597a15.591 15.591 0 0 0 2.046 2.082 8.916 8.916 0 0 0 .189.153l.012.01ZM8 8.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Z"
                  clip-rule="evenodd"></path>
              </svg>
              <a href={locationUrl}>
                {location}
              </a>
            </li>
            <li class="events__item-list-item">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
                fill="currentColor"
                class="events__item-icon"
                ><path
                  d="M6 19v1q0 .425-.288.713T5 21H4q-.425 0-.712-.288T3 20v-8l2.1-6q.15-.45.538-.725T6.5 5H9V3h6v2h2.5q.475 0 .863.275T18.9 6l2.1 6v8q0 .425-.287.713T20 21h-1q-.425 0-.712-.288T18 20v-1zm-.2-9h12.4l-1.05-3H6.85zM5 12v5zm2.5 4q.625 0 1.063-.437T9 14.5t-.437-1.062T7.5 13t-1.062.438T6 14.5t.438 1.063T7.5 16m9 0q.625 0 1.063-.437T18 14.5t-.437-1.062T16.5 13t-1.062.438T15 14.5t.438 1.063T16.5 16M5 17h14v-5H5z"
                ></path></svg
              >
              <a href={parkingUrl}>
                {parking}
              </a>
            </li>
            <li class="events__item-list-item">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 16 16"
                fill="currentColor"
                class="events__item-icon"
              >
                <path
                  fill-rule="evenodd"
                  d="M15 8A7 7 0 1 1 1 8a7 7 0 0 1 14 0ZM7.94 4.94c-.294.293-.44.675-.44 1.06v1.25h1.25a.75.75 0 1 1 0 1.5H7.5v1c0 .263-.045.516-.128.75h3.878a.75.75 0 0 1 0 1.5h-6.5a.75.75 0 0 1 0-1.5h.5A.75.75 0 0 0 6 9.75v-1H4.75a.75.75 0 0 1 0-1.5H6V6a3 3 0 0 1 5.121-2.121.75.75 0 1 1-1.06 1.06 1.5 1.5 0 0 0-2.121 0Z"
                  clip-rule="evenodd"></path>
              </svg>Free (ticket required, limited to 100)
            </li>
          </ul>
        </section>
        <Countdown date={dateStart} />
        <section class="event__section">
          <Heading title="Schedule" level={2} anchor />
          <ul class="event__schedule">
            {
              schedule.map(({ dateStart, dateEnd, title, description }) => (
                <li class="event__schedule-item">
                  <div class="schedule__time">
                    <time
                      class="schedule__timestamp"
                      datetime={dateStart.toISOString()}
                    >
                      {scheduleTimeFormat(dateStart)}
                    </time>{" "}
                    -{" "}
                    <time datetime={dateStart.toISOString()}>
                      {scheduleTimeFormat(dateEnd)}
                    </time>
                  </div>
                  <div class="schedule__event">
                    <strong>{title}</strong>
                    {description && <p>{description}</p>}
                  </div>
                </li>
              ))
            }
          </ul>
        </section>
        <section class="features">
          <div class="features__section">
            <Heading title="Accessibility" level={3} anchor />
            <p>
              Our venue is wheelchair accessible, and we provide on-site
              assistance for anyone requiring additional support during the
              meetup. While we currently do not offer live captioning for talks,
              we are committed to creating an inclusive environment and welcome
              all participants. Please contact the organisers with any specific
              accessibility requirements.
            </p>
          </div>
          <div class="features__section">
            <Heading title="Food and drinks" level={3} anchor />
            <p>
              Learning new things and socialising with others is a lot easier
              when you are properly energised. Pizza, some sweets and beverages
              are on us. There is something for everyone: pepperoni pizza, vegan
              ones, fizzy drinks, water and a selection of beers. You are
              welcome!
            </p>
          </div>
        </section>
      </div>
    </Container>
  </Section>

  {
    relatedSpeakers.length ? (
      <Section>
        <Container>
          <section class="event__section">
            <Heading title="Speakers" level={2} anchor />
            <div class="event__grid">
              {relatedSpeakers.map((speaker) => (
                <Profile {...speaker.data} />
              ))}
            </div>
          </section>
        </Container>
      </Section>
    ) : null
  }

  {
    images?.length ? (
      <Section style="contrast">
        <Container>
          <section class="event__section">
            <Heading title="Gallery" level={2} anchor />
            <Gallery images={images} />
          </section>
        </Container>
      </Section>
    ) : null
  }

  {
    isUpcoming ? (
      <Section style="contrast">
        <Container narrow>
          <form
            class="dialog__form"
            aria-label="Get your ticket form"
            data-event-id={id}
            data-event-name={entry.data.name}
            data-event-date={dateStartParsed}
            data-event-location={location}
            data-event-invite-url-ical={inviteUrls.iCal}
            data-event-invite-url-google={inviteUrls.google}
          >
            <Heading level={3} title="Get your ticket" anchor />
            <p>
              By registering, you agree to our{" "}
              <a href="/privacy-policy">privacy policy</a> and to follow our{" "}
              <a href="/code-of-conduct">code of conduct</a>.
            </p>
            <Input
              type="text"
              name="name"
              label="Name"
              required
              placeholder="Tim Cook"
            />
            <Input
              type="email"
              name="email"
              label="Email"
              required
              placeholder="timcook@apple.com"
            />
            <Checkbox
              label="Notify me about future events"
              name="newsletter"
              checked={false}
            />
            <div class="dialog__buttons">
              <Button id="signup-submit" text="Get your ticket" />
            </div>
          </form>
        </Container>
      </Section>
    ) : null
  }

  <Organisers founders={false} supporters={false} />
</Layout>

<script>
  import { actions } from "astro:actions";
  import * as Sentry from "@sentry/astro";

  function isDataFieldDefined(field: string | undefined): field is string {
    return field !== undefined;
  }

  const form = document.querySelector("form");
  const FORM_LOADING_CLASS = "dialog__form--loading";

  form?.addEventListener("submit", async (e) => {
    e.preventDefault();
    form.classList.add(FORM_LOADING_CLASS);
    const formData = new FormData(form);
    const eventId = form.dataset["eventId"];
    const eventName = form.dataset["eventName"];
    const eventLocation = form.dataset["eventLocation"];
    const eventDate = form.dataset["eventDate"];
    const eventInviteUrlIcal = form.dataset["eventInviteUrlIcal"];
    const eventInviteUrlGoogle = form.dataset["eventInviteUrlGoogle"];

    const isEventIdDefined = isDataFieldDefined(eventId);
    const isEventNameDefined = isDataFieldDefined(eventName);
    const isEventLocationDefined = isDataFieldDefined(eventLocation);
    const isEventDateDefined = isDataFieldDefined(eventDate);
    const isEventInviteUrlIcalDefined = isDataFieldDefined(eventInviteUrlIcal);
    const isEventInviteUrlGoogleDefined =
      isDataFieldDefined(eventInviteUrlGoogle);

    if (
      !isEventIdDefined ||
      !isEventNameDefined ||
      !isEventLocationDefined ||
      !isEventDateDefined ||
      !isEventInviteUrlIcalDefined ||
      !isEventInviteUrlGoogleDefined
    ) {
      Sentry.captureException("Missing data field");
      return null;
    }

    formData.append("eventId", eventId);
    formData.append("eventName", eventName);
    formData.append("eventLocation", eventLocation);
    formData.append("eventDate", eventDate);
    formData.append("eventInviteUrlIcal", eventInviteUrlIcal);
    formData.append("eventInviteUrlGoogle", eventInviteUrlGoogle);

    const { data, error } = await actions.submitFormTicket(formData);

    if (error) {
      Sentry.captureException(error);
      form.classList.remove(FORM_LOADING_CLASS);
      throw new Error(error.message);
    }

    window.location.href = `/events/${eventId}/${data}`;

    return undefined;
  });
</script>

<style>
  .event {
    display: flex;
    flex-direction: column;
    gap: calc(var(--lh) * 3);
  }

  .event__section {
    display: flex;
    flex-direction: column;
    gap: calc(var(--lh) * 1.5);
  }

  .events__item-list {
    list-style: none;
  }

  .events__item-list-item {
    display: flex;
    align-items: center;
    gap: calc(var(--lh) / 2);
  }

  .events__item-icon {
    width: 16px;
    height: 16px;
    opacity: 0.5;
  }

  .event__schedule {
    list-style: none;
  }
  .event__schedule-item {
    display: flex;
    flex-direction: column;
    padding-block: calc(var(--lh) / 2);
    box-shadow: inset 0 -1px 0 0 var(--color-border);

    &:last-of-type {
      box-shadow: none;
    }

    @media (800px <= width) {
      flex-direction: row;
    }
  }

  .schedule__time {
    min-width: 20ch;
  }

  .schedule__timestamp {
    font-variant-numeric: tabular-nums;
  }

  .event__grid {
    display: grid;
    gap: calc(var(--lh) * 2);

    @media (800px <= width) {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  .dialog {
    margin: auto;
    border: none;
    color: var(--color-fg);
    background-color: var(--color-bg-contrast);
    padding: var(--lh);
    border-radius: var(--br);
    width: min(100% - var(--lh) * 2, 600px);
    transition:
      display 240ms allow-discrete,
      overlay 240ms allow-discrete,
      opacity 240ms;
    opacity: 0;

    @media (prefers-reduced-motion) {
      transition: unset;
    }

    &::backdrop {
      background: color-mix(in srgb, var(--color-bg), transparent 5%);
      transition:
        display 240ms allow-discrete,
        overlay 240ms allow-discrete,
        opacity 240ms;
      opacity: 0;

      @media (prefers-reduced-motion) {
        transition: unset;
      }
    }

    &[open] {
      display: flex;
      opacity: 1;

      &::backdrop {
        opacity: 1;
      }
    }

    @starting-style {
      &[open],
      &[open]::backdrop {
        opacity: 0;
      }
    }
  }

  .dialog__form {
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: var(--lh);
  }

  .dialog__form--loading {
    pointer-events: none;
    position: relative;

    * {
      opacity: 0.2;
      filter: blur(10px);
    }

    &::after {
      position: absolute;
      inset: 50%;
      translate: calc(var(--lh) / -2) calc(var(--lh) / -2);
      content: "";
      width: var(--lh);
      aspect-ratio: 1;
      --_g: no-repeat
        radial-gradient(farthest-side, var(--color-fg) 90%, transparent);
      background: var(--_g), var(--_g), var(--_g), var(--_g);
      background-size: calc(var(--lh) / 3) calc(var(--lh) / 3);
      animation: loader 1s infinite;
    }
  }

  @keyframes loader {
    0% {
      background-position:
        0 0,
        100% 0,
        100% 100%,
        0 100%;
    }
    40%,
    50% {
      background-position:
        100% 100%,
        100% 0,
        0 0,
        0 100%;
    }
    90%,
    100% {
      background-position:
        100% 100%,
        0 100%,
        0 0,
        100% 0;
    }
  }

  .dialog__buttons {
    display: flex;
    justify-content: space-between;
  }

  .dialog__close {
    all: unset;
    font: inherit;
    opacity: 0.5;

    &:hover {
      opacity: 1;
    }
  }

  .features {
    display: grid;
    gap: calc(var(--lh) * 2);

    @media (800px <= width) {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  .features__section {
    display: flex;
    flex-direction: column;
    gap: var(--lh);
  }
</style>
